;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("iostream" include (:system-flag t) nil [2185 2204])
            ("sstream" include (:system-flag t) nil [2205 2223])
            ("stdexcept" include (:system-flag t) nil [2224 2244])
            ("cctype" include (:system-flag t) nil [2245 2262])
            ("cstdlib" include (:system-flag t) nil [2263 2281])
            ("cstring" include (:system-flag t) nil [2282 2300])
            ("cassert" include (:system-flag t) nil [2301 2319])
            ("cstdio" include (:system-flag t) nil [2320 2337])
            ("scanner.h" include nil nil [2338 2358])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [2359 2379])
            ("TOKEN_STRLEN" variable (:constant-flag t) nil [2526 2538])
            ("ETokenName" variable
               (:dereference 2
                :default-value "{
  \"tDigit\",                         ///< a digit
  \"tLetter\",                        ///< a letter

  \"tNumber\",                        ///< a number
  \"tIdent\",                         ///< an identifier
  \"tType\",                          ///< base type (\"boolean\", \"char\", \"integer\")
  \"tPlusMinus\",                     ///< \"+\" or \"-\"
  \"tMulDiv\",                        ///< \"*\" or \"/\"
  \"tRelOp\",                         ///< relational operator (\"=\", \"#\", \"<\", \"<=\", \">\", \">=\")

  \"tAnd\",                           ///< term operator \"&&\"
  \"tOr\",                            ///< term operator \"||\"
  \"tNot\",                           ///< factor operator \"!\"

  \"tAssign\",                        ///< assignment operator
  \"tSemicolon\",                     ///< a semicolon
  \"tDot\",                           ///< a dot
  \"tLBrak\",                         ///< a left bracket
  \"tRBrak\",                         ///< a right bracket

  \"tColon\",                         ///< a colon
  \"tComma\",                         ///< a comma
  \"tLParen\",                        ///< a left parenthesis
  \"tRParen\",                        ///< a right parenthesis

  \"tModule\",                        ///< keyword \"module\"
  \"tBegin\",                         ///< keyword \"begin\"
  \"tEnd\",                           ///< keyword \"end\"
  \"tVarDecl\",                       ///< keyword \"var\"

  \"tWhile\",                         ///< keyword \"while\"
  \"tDo\",                            ///< keyword \"do\"

  \"tIf\",                            ///< keyword \"if\"
  \"tThen\",                          ///< keyword \"then\"
  \"tElse\",                          ///< keyword \"else\"

  \"tReturn\",                        ///< keyword \"return\"

  \"tProcedure\",                     ///< keyword \"procedure\"
  \"tFunction\",                      ///< keyword \"function\"

  \"tEOF\",                           ///< end of file
  \"tIOError\",                       ///< I/O error
  \"tInvCharConst\",                  ///< invalid char constant
  \"tInvStringConst\",                ///< invalid string constant
  \"tUndefined\",                     ///< undefined

  \"tConstDecl\",                     ///< keyword \"const\"
  \"tBoolConst\",                     ///< boolean constant
  \"tCharConst\",                     ///< character constant
  \"tStringConst\",                   ///< string constant
}"
                :type "char")
                nil [2543 4946])
            ("ETokenStr" variable
               (:dereference 2
                :default-value "{
  \"tDigit (%s)\",                    ///< a digit
  \"tLetter (%s)\",                   ///< a letter

  \"tNumber (%s)\",                   ///< a number
  \"tIdent (%s)\",                    ///< an identifier
  \"tType (%s)\",                     ///< base type (\"boolean\", \"char\", \"integer\")
  \"tPlusMinus (%s)\",                ///< \"+\" or \"-\"
  \"tMulDiv (%s)\",                   ///< \"*\" or \"/\"
  \"tRelOp (%s)\",                    ///< relational operator (\"=\", \"#\", \"<\", \"<=\", \">\", \">=\")

  \"tAnd\",                           ///< term operator \"&&\"
  \"tOr\",                            ///< term operator \"||\"
  \"tNot\",                           ///< factor operator \"!\"

  \"tAssign\",                        ///< assignment operator
  \"tSemicolon\",                     ///< a semicolon
  \"tDot\",                           ///< a dot
  \"tLBrak\",                         ///< a left bracket
  \"tRBrak\",                         ///< a right bracket

  \"tColon\",                         ///< a colon
  \"tComma\",                         ///< a comma
  \"tLParen\",                        ///< a left parenthesis
  \"tRParen\",                        ///< a right parenthesis

  \"tModule\",                        ///< keyword \"module\"
  \"tBegin\",                         ///< keyword \"begin\"
  \"tEnd\",                           ///< keyword \"end\"
  \"tVarDecl\",                       ///< keyword \"var\"

  \"tWhile\",                         ///< keyword \"while\"
  \"tDo\",                            ///< keyword \"do\"

  \"tIf\",                            ///< keyword \"if\"
  \"tThen\",                          ///< keyword \"then\"
  \"tElse\",                          ///< keyword \"else\"

  \"tReturn\",                        ///< keyword \"return\"

  \"tProcedure\",                     ///< keyword \"procedure\"
  \"tFunction\",                      ///< keyword \"function\"

  \"tEOF\",                           ///< end of file
  \"tIOError\",                       ///< I/O error
  \"tInvCharConst (%s)\",             ///< invalid char constant
  \"tInvStringConst (%s)\",           ///< invalid string constant
  \"tUndefined (%s)\",                ///< undefined

  \"tConstDecl\",                     ///< keyword \"const\"
  \"tBoolConst (%s)\",                ///< boolean constant
  \"tCharConst (%s)\",                ///< character constant
  \"tStringConst (\\\"%s\\\")\",              ///< string constant
}"
                :type "char")
                nil [5077 7483])
            ("Keywords" variable
               (:dereference 1
                :default-value "{
  { \"module\", tModule },
  { \"begin\", tBegin },
  { \"end\", tEnd },
  { \"var\", tVarDecl },
  { \"while\", tWhile },
  { \"do\", tDo },
  { \"if\", tIf },
  { \"then\", tThen },
  { \"else\", tElse },
  { \"peturn\", tReturn },
  { \"procedure\", tProcedure },
  { \"function\", tFunction },
  { \"true\", tBoolConst },
  { \"false\", tBoolConst },
  { \"boolean\", tType },
  { \"char\", tType },
  { \"integer\", tType },
  { \"const\", tConstDecl },
  { \"return\", tReturn },
}"
                :type ("pair" type
                     (:template-specifier 
                        ( ("char" type
                             (:pointer 1
                              :constant-flag t)
                              nil nil)
                          ("EToken" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [7591 8082])
            ("CToken" function
               (:constructor-flag t
                :parent "CToken"
                :type ("CToken" type (:type "class") nil nil))
                nil [8179 8257])
            ("CToken" function
               (:constructor-flag t
                :parent "CToken"
                :arguments 
                  ( ("line" variable (:type "int") (reparse-symbol arg-sub-list) [8274 8283])
                    ("charpos" variable (:type "int") (reparse-symbol arg-sub-list) [8284 8296])
                    ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8297 8309])
                    ("value" variable
                       (:constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8310 8329]))                  
                :type ("CToken" type (:type "class") nil nil))
                nil [8259 8487])
            ("CToken" function
               (:constructor-flag t
                :parent "CToken"
                :arguments 
                  ( ("token" variable
                       (:reference 1
                        :constant-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8504 8524]))                  
                :type ("CToken" type (:type "class") nil nil))
                nil [8489 8652])
            ("CToken" function
               (:constructor-flag t
                :parent "CToken"
                :arguments 
                  ( ("token" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8669 8689]))                  
                :type ("CToken" type (:type "class") nil nil))
                nil [8654 8821])
            ("Name" function
               (:parent "CToken"
                :constant-flag t
                :arguments 
                  ( ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8849 8861]))                  
                :type ("string" type (:type "class") nil nil))
                nil [8823 8900])
            ("GetName" function
               (:methodconst-flag t
                :parent "CToken"
                :constant-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8931 8936]))                  
                :type ("string" type (:type "class") nil nil))
                nil [8902 8980])
            ("print" function
               (:methodconst-flag t
                :parent "CToken"
                :arguments 
                  ( ("out" variable
                       (:reference 1
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9005 9018]))                  
                :type ("ostream" type (:type "class") nil nil))
                nil [8982 9343])
            ("escape" function
               (:parent "CToken"
                :arguments 
                  ( ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9367 9379])
                    ("text" variable
                       (:constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9380 9398]))                  
                :type ("string" type (:type "class") nil nil))
                nil [9345 10338])
            ("unescape" function
               (:parent "CToken"
                :arguments 
                  ( ("text" variable
                       (:constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10364 10382]))                  
                :type ("string" type (:type "class") nil nil))
                nil [10340 10973])
            ("digitValue" function
               (:parent "CToken"
                :arguments 
                  ( ("c" variable (:type "char") (reparse-symbol arg-sub-list) [10998 11005]))                  
                :type "int")
                nil [10975 11141])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("out" variable
                       (:reference 1
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11163 11176])
                    ("t" variable
                       (:reference 1
                        :constant-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11177 11193]))                  
                :type ("ostream" type (:type "class") nil nil))
                nil [11143 11220])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("out" variable
                       (:reference 1
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11242 11255])
                    ("t" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11256 11272]))                  
                :type ("ostream" type (:type "class") nil nil))
                nil [11222 11300])
            ("CScanner::keywords" variable (:type ("map" type
                 (:template-specifier 
                    ( ("string" type nil nil nil)
                      ("EToken" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [11399 11438])
            ("CScanner" function
               (:constructor-flag t
                :parent "CScanner"
                :arguments 
                  ( ("in" variable
                       (:pointer 1
                        :type ("istream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11459 11471]))                  
                :type ("CScanner" type (:type "class") nil nil))
                nil [11440 11602])
            ("CScanner" function
               (:constructor-flag t
                :parent "CScanner"
                :arguments 
                  ( ("in" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11623 11633]))                  
                :type ("CScanner" type (:type "class") nil nil))
                nil [11604 11776])
            ("CScanner" function
               (:destructor-flag t
                :parent "CScanner"
                :type "void")
                nil [11778 11870])
            ("InitKeywords" function
               (:parent "CScanner"
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11900 11905]))                  
                :type "void")
                nil [11872 12093])
            ("Get" function
               (:parent "CScanner"
                :type ("CToken" type (:type "class") nil nil))
                nil [12095 12246])
            ("Peek" function
               (:methodconst-flag t
                :parent "CScanner"
                :type ("CToken" type (:type "class") nil nil))
                nil [12248 12306])
            ("NextToken" function
               (:parent "CScanner"
                :type "void")
                nil [12308 12395])
            ("RecordStreamPosition" function
               (:parent "CScanner"
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [12433 12438]))                  
                :type "void")
                nil [12397 12488])
            ("GetRecordedStreamPosition" function
               (:parent "CScanner"
                :arguments 
                  ( ("lineno" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [12531 12543])
                    ("charpos" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [12544 12557]))                  
                :type "void")
                nil [12490 12612])
            ("NewToken" function
               (:pointer 1
                :parent "CScanner"
                :arguments 
                  ( ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12641 12653])
                    ("token" variable
                       (:constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12654 12673]))                  
                :type ("CToken" type (:type "class") nil nil))
                nil [12614 12737])
            ("Scan" function
               (:pointer 1
                :parent "CScanner"
                :type ("CToken" type (:type "class") nil nil))
                nil [12739 16100])
            ("NewToken" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("token" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16083 16089])
                    ("" variable (:type ("tokval" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16090 16097]))                  
                :type "int")
                nil [16074 16098])
            ("peek" function
               (:prototype-flag t
                :type "int")
                nil [16168 16175])
            ("c" variable
               (:default-value "_in->get()"
                :type "unsigned char")
                nil [16217 16246])
            ("c" variable (:type "int") nil [16311 16313])
            ("str" variable (:type ("string" type (:type "class") nil nil)) nil [16353 16364])
            ("GetChar" function
               (:prototype-flag t
                :type "int")
                nil [16398 16408])
            ("str" variable (:type "int") nil [16418 16422])
            ("GetChar" function
               (:prototype-flag t
                :type "int")
                nil [16615 16625])
            ("c" variable (:type "unsigned char") nil [16674 16690])
            ("c" variable
               (:default-value "ThrowOrGetChar()"
                :type "int")
                nil [16694 16715])
            ("c" variable (:type "int") nil [17484 17486])
            ("s" variable (:type ("string" type (:type "class") nil nil)) nil [18093 18102])
            ("s" variable (:type "int") nil [18247 18249])
            ("HexDigitToByte" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("c2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18634 18637]))                  
                :type "int")
                nil [18619 18638]))          
      :file "scanner.cpp"
      :pointmax 18641
      :fsize 18640
      :lastmodtime '(23939 49997 857102 500000)
      :unmatched-syntax nil
      :lexical-table 
        '(("TOKEN_STRLEN" . ((number "24" 2539 . 2541)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("__SnuPL_SCANNER_H__" variable (:constant-flag t) nil [2221 2240])
            ("istream" include (:system-flag t) nil [2242 2260])
            ("ostream" include (:system-flag t) nil [2261 2279])
            ("iomanip" include (:system-flag t) nil [2280 2298])
            ("map" include (:system-flag t) nil [2299 2313])
            ("exception" include (:system-flag t) nil [2314 2334])
            ("string" include (:system-flag t) nil [2335 2352])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [2354 2374])
            ("EToken" type
               (:members 
                  ( ("tDigit" variable
                       (:constant-flag t
                        :default-value (2585 2586)
                        :type "int")
                        (reparse-symbol enumsubparts) [2578 2586])
                    ("tLetter" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2627 2635])
                    ("tNumber" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2678 2686])
                    ("tIdent" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2728 2735])
                    ("tType" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2783 2789])
                    ("tPlusMinus" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2865 2876])
                    ("tMulDiv" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2917 2925])
                    ("tRelOp" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2969 2976])
                    ("tAnd" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3064 3069])
                    ("tOr" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3124 3128])
                    ("tNot" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3184 3189])
                    ("tAssign" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3246 3254])
                    ("tSemicolon" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3314 3325])
                    ("tDot" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3373 3378])
                    ("tLBrak" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3426 3433])
                    ("tRBrak" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3488 3495])
                    ("tColon" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3552 3559])
                    ("tComma" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3607 3614])
                    ("tLParen" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3662 3670])
                    ("tRParen" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3728 3736])
                    ("tModule" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3796 3804])
                    ("tBegin" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3854 3861])
                    ("tEnd" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3911 3916])
                    ("tVarDecl" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3966 3975])
                    ("tWhile" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4022 4029])
                    ("tDo" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4079 4083])
                    ("tIf" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4134 4138])
                    ("tThen" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4188 4194])
                    ("tElse" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4244 4250])
                    ("tReturn" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4301 4309])
                    ("tProcedure" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4360 4371])
                    ("tFunction" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4421 4431])
                    ("tEOF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4482 4487])
                    ("tIOError" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4535 4544])
                    ("tInvCharConst" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4586 4600])
                    ("tInvStringConst" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4649 4665])
                    ("tUndefined" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4714 4725])
                    ("tConstDecl" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4896 4907])
                    ("tBoolConst" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4953 4964])
                    ("tCharConst" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [5011 5022])
                    ("tStringConst" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [5071 5084]))                  
                :type "enum")
                nil [2562 5128])
            ("CToken" type
               (:members 
                  ( ("CScanner" friend nil (reparse-symbol classsubparts) [5561 5582])
                    ("public" label nil (reparse-symbol classsubparts) [5586 5593])
                    ("CToken" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5672 5681])
                    ("CToken" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("line" variable (:type "int") (reparse-symbol arg-sub-list) [5936 5945])
                            ("charpos" variable (:type "int") (reparse-symbol arg-sub-list) [5946 5958])
                            ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5959 5971])
                            ("value" variable
                               (:constant-flag t
                                :default-value "\"\""
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5972 5993]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5929 5995])
                    ("CToken" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("CToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6082 6102]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6075 6103])
                    ("CToken" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("token" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("CToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6190 6210]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6183 6211])
                    ("Name" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :constant-flag t
                        :arguments 
                          ( ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6380 6392]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6355 6393])
                    ("GetName" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :constant-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6509 6514]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6488 6521])
                    ("GetType" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6631 6636]))                          
                        :type ("EToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6616 6660])
                    ("GetValue" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6774 6779]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6758 6804])
                    ("GetLineNumber" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6992 6997]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [6974 7021])
                    ("GetCharPosition" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7169 7174]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [7149 7198])
                    ("escape" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7458 7470])
                            ("text" variable
                               (:constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7471 7489]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7437 7490])
                    ("unescape" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("text" variable
                               (:constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7651 7669]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7628 7670])
                    ("digitValue" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("c" variable (:type "char") (reparse-symbol arg-sub-list) [7908 7915]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [7886 7916])
                    ("print" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("out" variable
                               (:reference 1
                                :type ("ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8042 8055]))                          
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [8026 8062])
                    ("private" label nil (reparse-symbol classsubparts) [8066 8074])
                    ("_type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8079 8092])
                    ("_value" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8131 8145])
                    ("_line" variable (:type "int") (reparse-symbol classsubparts) [8184 8197])
                    ("_char" variable (:type "int") (reparse-symbol classsubparts) [8254 8267]))                  
                :type "class")
                nil [5544 8331])
            ("<<" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("out" variable
                       (:reference 1
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8521 8534])
                    ("t" variable
                       (:reference 1
                        :constant-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8535 8551]))                  
                :type ("ostream" type (:type "class") nil nil))
                nil [8501 8552])
            ("<<" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("out" variable
                       (:reference 1
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8700 8713])
                    ("t" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8714 8730]))                  
                :type ("ostream" type (:type "class") nil nil))
                nil [8680 8731])
            ("EScanError" type
               (:members 
                  ( ("eUnescapedChar" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [8927 8942])
                    ("eEmptyChar" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [8963 8974])
                    ("eInvalidEscapeChar" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [8994 9013])
                    ("eUnexpectedNewLine" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9025 9044])
                    ("eUnexpectedEOF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9056 9071])
                    ("eUnclosedChar" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [9087 9101]))                  
                :type "enum")
                nil [8907 9118])
            ("EScanErrorStr" variable
               (:dereference 1
                :constant-flag t
                :default-value "{
  \"Unescaped control code\",
  \"Empty character literal\",
  \"Invalid escape character\",
  \"Unexpected new line\",
  \"Found unexpected EOF\",
  \"Unclosed char literal\",
}"
                :type ("string" type (:type "class") nil nil))
                nil [9120 9320])
            ("ScanError" type
               (:superclasses 
                  ( ("std::exception" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("_e" variable (:type ("EScanError" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9366 9380])
                    ("public" label nil (reparse-symbol classsubparts) [9382 9389])
                    ("ScanError" function
                       (:constructor-flag t
                        :arguments 
                          ( ("e" variable
                               (:reference 1
                                :constant-flag t
                                :type ("EScanError" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9403 9423]))                          
                        :type ("ScanError" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9393 9434]))                  
                :type "class")
                nil [9322 9537])
            ("CScanner" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [9749 9756])
                    ("CScanner" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("in" variable
                               (:pointer 1
                                :type ("istream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9914 9926]))                          
                        :type ("CScanner" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9905 9927])
                    ("CScanner" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("in" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10035 10045]))                          
                        :type ("CScanner" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10026 10046])
                    ("CScanner" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [10078 10090])
                    ("Get" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [10225 10230]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10214 10231])
                    ("Peek" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [10365 10370]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10353 10377])
                    ("Good" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [10571 10576]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [10561 10600])
                    ("GetLineNumber" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [10734 10739]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [10716 10763])
                    ("GetCharPosition" function
                       (:methodconst-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [10893 10938])
                    ("private" label nil (reparse-symbol classsubparts) [10943 10951])
                    ("InitKeywords" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11026 11031]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [11008 11032])
                    ("NextToken" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11088 11093]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [11073 11094])
                    ("RecordStreamPosition" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11199 11204]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [11173 11205])
                    ("GetRecordedStreamPosition" function
                       (:prototype-flag t
                        :arguments 
                          ( ("lineno" variable
                               (:pointer 1
                                :type "int")
                                (reparse-symbol arg-sub-list) [11394 11406])
                            ("charpos" variable
                               (:pointer 1
                                :type "int")
                                (reparse-symbol arg-sub-list) [11407 11420]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [11363 11421])
                    ("NewToken" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11594 11606])
                            ("token" variable
                               (:constant-flag t
                                :default-value "\"\""
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11607 11628]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11577 11630])
                    ("Scan" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11806 11811]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11793 11812])
                    ("PeekChar" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11980 11985]))                          
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [11957 11986])
                    ("GetChar" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [12136 12141]))                          
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [12114 12142])
                    ("GetChar" function
                       (:prototype-flag t
                        :arguments 
                          ( ("n" variable (:type "int") (reparse-symbol arg-sub-list) [12339 12345]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [12324 12346])
                    ("ThrowOrGetChar" function
                       (:prototype-flag t
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [12374 12405])
                    ("GetCharLiteral" function
                       (:prototype-flag t
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [12411 12442])
                    ("IsWhite" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("c" variable (:type "unsigned char") (reparse-symbol arg-sub-list) [12657 12673]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [12637 12674])
                    ("IsAlpha" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("c" variable (:type "unsigned char") (reparse-symbol arg-sub-list) [12904 12920]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [12884 12921])
                    ("IsNum" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("c" variable (:type "unsigned char") (reparse-symbol arg-sub-list) [13135 13151]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [13117 13152])
                    ("IsHexDigit" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("c" variable (:type "unsigned char") (reparse-symbol arg-sub-list) [13403 13419]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [13380 13420])
                    ("IsIDChar" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("c" variable (:type "unsigned char") (reparse-symbol arg-sub-list) [13655 13671]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [13634 13672])
                    ("ToHexStr" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("c" variable (:type "unsigned char") (reparse-symbol arg-sub-list) [13716 13732]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13700 13739])
                    ("HexDigitToByte" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("c" variable (:type "unsigned char") (reparse-symbol arg-sub-list) [13774 13790]))                          
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [13745 13797])
                    ("HexPairToChar" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("c1" variable (:type "unsigned char") (reparse-symbol arg-sub-list) [13831 13848])
                            ("c2" variable (:type "unsigned char") (reparse-symbol arg-sub-list) [13849 13866]))                          
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [13803 13873])
                    ("private" label nil (reparse-symbol classsubparts) [13889 13897])
                    ("keywords" variable
                       (:typemodifiers ("static")
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("EToken" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [13902 13938])
                    ("_in" variable
                       (:pointer 1
                        :type ("istream" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13983 13996])
                    ("_delete_in" variable (:type "bool") (reparse-symbol classsubparts) [14037 14056])
                    ("_good" variable (:type "bool") (reparse-symbol classsubparts) [14115 14129])
                    ("_line" variable (:type "int") (reparse-symbol classsubparts) [14176 14190])
                    ("_char" variable (:type "int") (reparse-symbol classsubparts) [14248 14262])
                    ("_saved_line" variable (:type "int") (reparse-symbol classsubparts) [14329 14349])
                    ("_saved_char" variable (:type "int") (reparse-symbol classsubparts) [14399 14419])
                    ("_token" variable
                       (:pointer 1
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [14478 14493]))                  
                :type "class")
                nil [9730 14544]))          
      :file "scanner.h"
      :pointmax 14577
      :fsize 14576
      :lastmodtime '(23939 42320 134703 800000)
      :unmatched-syntax nil
      :lexical-table 
        '(("__SnuPL_SCANNER_H__")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("cstdlib" include (:system-flag t) nil [1855 1873])
            ("iostream" include (:system-flag t) nil [1874 1893])
            ("fstream" include (:system-flag t) nil [1894 1912])
            ("scanner.h" include nil nil [1914 1934])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [1935 1955])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [1966 1975])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1976 1989]))                  
                :type "int")
                nil [1957 2708]))          
      :file "test_scanner.cpp"
      :pointmax 2709
      :fsize 2708
      :lastmodtime '(23938 20395 404550 700000)
      :unmatched-syntax nil))
  :file "!home!starvessel!work!snucomp!1.Scanning!snuplc!src!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
