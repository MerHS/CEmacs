;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("iostream" include (:system-flag t) nil [1950 1969])
            ("sstream" include (:system-flag t) nil [1970 1988])
            ("cctype" include (:system-flag t) nil [1989 2006])
            ("cstdlib" include (:system-flag t) nil [2007 2025])
            ("cstring" include (:system-flag t) nil [2026 2044])
            ("cassert" include (:system-flag t) nil [2045 2063])
            ("cstdio" include (:system-flag t) nil [2064 2081])
            ("scanner.h" include nil nil [2083 2103])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [2104 2124])
            ("TOKEN_STRLEN" variable (:constant-flag t) nil [2233 2245])
            ("ETokenName" variable
               (:dereference 2
                :default-value "{
  \"tDigit\",                         ///< a digit
  \"tLetter\",                        ///< a letter

  \"tChar\",                          ///< character literal
  \"tString\",                        ///< string literal

  \"tNumber\",                        ///< a number
  \"tBoolean\",                       ///< boolean literal (\"true\", \"false\")
  \"tType\",                          ///< type qualifier
  \"tFactOp\",                        ///< factor operator
  \"tTermOp\",                        ///< term operator
  \"tRelOp\",                         ///< relational operator
  \"tBang\",                          ///< an exlamation mark (\"!\")

  \"tAssign\",                        ///< assignment operator
  \"tSemicolon\",                     ///< a semicolon
  \"tDot\",                           ///< a dot
  \"tLBrak\",                         ///< a left bracket
  \"tRBrak\",                         ///< a right bracket

  \"tColon\",                         ///< a colon
  \"tComma\",                         ///< a comma
  \"tLParen\",                        ///< a left parenthesis
  \"tRParen\",                        ///< a right parenthesis

  \"tModule\",                        ///< keyword \"module\"
  \"tBegin\",                         ///< keyword \"begin\"
  \"tEnd\",                           ///< keyword \"end\"
  \"tVarDecl\",                       ///< keyword \"var\"

  \"tWhile\",                         ///< keyword \"while\"
  \"tDo\",                            ///< keyword \"do\"

  \"tIf\",                            ///< keyword \"if\"
  \"tThen\",                          ///< keyword \"then\"
  \"tElse\",                          ///< keyword \"else\"

  \"tReturn\",                        ///< keyword \"return\"

  \"tProcedure\",                     ///< keyword \"procedure\"
  \"tFunction\",                      ///< keyword \"function\"

  \"tEOF\",                           ///< end of file
  \"tIOError\",                       ///< I/O error
  \"tUndefined\"                     ///< undefined
}"
                :type "char")
                nil [2250 4260])
            ("ETokenStr" variable
               (:dereference 2
                :default-value "{
  \"tDigit (%s)\",                    ///< a digit
  \"tLetter (%s)\",                   ///< a letter

  \"tChar (%s)\",                     ///< character literal
  \"tString (%s)\",                   ///< string literal

  \"tNumber (%s)\",                   ///< a number
  \"tBoolean (%s)\",                  ///< boolean literal (\"true\", \"false\")
  \"tType (%s)\",                     ///< type qualifier
  \"tFactOp (%s)\",                   ///< factor operator
  \"tTermOp (%s)\",                   ///< term operator
  \"tRelOp (%s)\",                    ///< relational operator
  \"tBang\",                          ///< an exclamation mark (\"!\")

  \"tAssign\",                        ///< assignment operator
  \"tSemicolon\",                     ///< a semicolon
  \"tDot\",                           ///< a dot
  \"tLBrak\",                         ///< a left bracket
  \"tRBrak\",                         ///< a right bracket

  \"tColon\",                         ///< a colon
  \"tComma\",                         ///< a comma
  \"tLParen\",                        ///< a left parenthesis
  \"tRParen\",                        ///< a right parenthesis

  \"tModule\",                        ///< keyword \"module\"
  \"tBegin\",                         ///< keyword \"begin\"
  \"tEnd\",                           ///< keyword \"end\"
  \"tVarDecl\",                       ///< keyword \"var\"

  \"tWhile\",                         ///< keyword \"while\"
  \"tDo\",                            ///< keyword \"do\"

  \"tIf\",                            ///< keyword \"if\"
  \"tThen\",                          ///< keyword \"then\"
  \"tElse\",                          ///< keyword \"else\"

  \"tReturn\",                        ///< keyword \"return\"

  \"tProcedure\",                     ///< keyword \"procedure\"
  \"tFunction\",                      ///< keyword \"function\"

  \"tEOF\",                           ///< end of file
  \"tIOError\",                       ///< I/O error
  \"tUndefined (%s)\"                 ///< undefined
}"
                :type "char")
                nil [4391 6402])
            ("Keywords" variable
               (:dereference 1
                :default-value "{
  pair<const char*, EToken> (\"module\", tModule),
  pair<const char*, EToken> (\"begin\", tBegin),
  pair<const char*, EToken> (\"end\", tEnd),
  pair<const char*, EToken> (\"var\", tVarDecl),
  pair<const char*, EToken> (\"while\", tWhile),
  pair<const char*, EToken> (\"do\", tDo),
  pair<const char*, EToken> (\"if\", tIf),
  pair<const char*, EToken> (\"then\", tThen),
  pair<const char*, EToken> (\"else\", tElse),
  pair<const char*, EToken> (\"peturn\", tReturn),
  pair<const char*, EToken> (\"procedure\", tProcedure),
  pair<const char*, EToken> (\"function\", tFunction),
  pair<const char*, EToken> (\"true\", tBoolean),
  pair<const char*, EToken> (\"false\", tBoolean),
  pair<const char*, EToken> (\"boolean\", tType),
  pair<const char*, EToken> (\"char\", tType),
  pair<const char*, EToken> (\"integer\", tType),
}"
                :type ("pair" type
                     (:template-specifier 
                        ( ("char" type
                             (:pointer 1
                              :constant-flag t)
                              nil nil)
                          ("EToken" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [6510 7353])
            ("CToken" function
               (:constructor-flag t
                :parent "CToken"
                :type ("CToken" type (:type "class") nil nil))
                nil [7451 7529])
            ("CToken" function
               (:constructor-flag t
                :parent "CToken"
                :arguments 
                  ( ("line" variable (:type "int") (reparse-symbol arg-sub-list) [7546 7555])
                    ("charpos" variable (:type "int") (reparse-symbol arg-sub-list) [7556 7568])
                    ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7569 7581])
                    ("value" variable
                       (:constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7582 7601]))                  
                :type ("CToken" type (:type "class") nil nil))
                nil [7531 7682])
            ("CToken" function
               (:constructor-flag t
                :parent "CToken"
                :arguments 
                  ( ("token" variable
                       (:reference 1
                        :constant-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7699 7719]))                  
                :type ("CToken" type (:type "class") nil nil))
                nil [7684 7847])
            ("CToken" function
               (:constructor-flag t
                :parent "CToken"
                :arguments 
                  ( ("token" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7864 7884]))                  
                :type ("CToken" type (:type "class") nil nil))
                nil [7849 8016])
            ("Name" function
               (:parent "CToken"
                :constant-flag t
                :arguments 
                  ( ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8044 8056]))                  
                :type ("string" type (:type "class") nil nil))
                nil [8018 8095])
            ("GetName" function
               (:methodconst-flag t
                :parent "CToken"
                :constant-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8126 8131]))                  
                :type ("string" type (:type "class") nil nil))
                nil [8097 8181])
            ("print" function
               (:methodconst-flag t
                :parent "CToken"
                :arguments 
                  ( ("out" variable
                       (:reference 1
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8206 8219]))                  
                :type ("ostream" type (:type "class") nil nil))
                nil [8183 8503])
            ("escape" function
               (:parent "CToken"
                :arguments 
                  ( ("text" variable
                       (:constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8527 8545]))                  
                :type ("string" type (:type "class") nil nil))
                nil [8505 8915])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("out" variable
                       (:reference 1
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8937 8950])
                    ("t" variable
                       (:reference 1
                        :constant-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8951 8967]))                  
                :type ("ostream" type (:type "class") nil nil))
                nil [8917 8994])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("out" variable
                       (:reference 1
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9016 9029])
                    ("t" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9030 9046]))                  
                :type ("ostream" type (:type "class") nil nil))
                nil [8996 9074])
            ("CScanner::keywords" variable (:type ("map" type
                 (:template-specifier 
                    ( ("string" type nil nil nil)
                      ("EToken" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [9173 9212])
            ("CScanner" function
               (:constructor-flag t
                :parent "CScanner"
                :arguments 
                  ( ("in" variable
                       (:pointer 1
                        :type ("istream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9233 9245]))                  
                :type ("CScanner" type (:type "class") nil nil))
                nil [9214 9376])
            ("CScanner" function
               (:constructor-flag t
                :parent "CScanner"
                :arguments 
                  ( ("in" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9397 9407]))                  
                :type ("CScanner" type (:type "class") nil nil))
                nil [9378 9550])
            ("CScanner" function
               (:destructor-flag t
                :parent "CScanner"
                :type "void")
                nil [9552 9644])
            ("InitKeywords" function
               (:parent "CScanner"
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9674 9679]))                  
                :type "void")
                nil [9646 9867])
            ("Get" function
               (:parent "CScanner"
                :type ("CToken" type (:type "class") nil nil))
                nil [9869 10020])
            ("Peek" function
               (:methodconst-flag t
                :parent "CScanner"
                :type ("CToken" type (:type "class") nil nil))
                nil [10022 10080])
            ("NextToken" function
               (:parent "CScanner"
                :type "void")
                nil [10082 10169])
            ("RecordStreamPosition" function
               (:parent "CScanner"
                :type "void")
                nil [10171 10258])
            ("GetRecordedStreamPosition" function
               (:parent "CScanner"
                :arguments 
                  ( ("lineno" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [10301 10313])
                    ("charpos" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [10314 10327]))                  
                :type "void")
                nil [10260 10382])
            ("NewToken" function
               (:pointer 1
                :parent "CScanner"
                :arguments 
                  ( ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10411 10423])
                    ("token" variable
                       (:constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10424 10443]))                  
                :type ("CToken" type (:type "class") nil nil))
                nil [10384 10507])
            ("Scan" function
               (:pointer 1
                :parent "CScanner"
                :type ("CToken" type (:type "class") nil nil))
                nil [10509 12826])
            ("NewToken" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("token" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12809 12815])
                    ("" variable (:type ("tokval" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12816 12823]))                  
                :type "int")
                nil [12800 12824])
            ("c" variable
               (:default-value "_in->get()"
                :type "char")
                nil [12857 12877])
            ("c" variable (:type "int") nil [12942 12944])
            ("str" variable (:type ("string" type (:type "class") nil nil)) nil [12984 12995])
            ("GetChar" function
               (:prototype-flag t
                :type "int")
                nil [13029 13039])
            ("str" variable (:type "int") nil [13049 13053]))          
      :file "scanner.cpp"
      :pointmax 13429
      :fsize 13420
      :lastmodtime '(23934 62554 473669 100000)
      :unmatched-syntax nil
      :lexical-table 
        '(("TOKEN_STRLEN" . ((number "16" 2246 . 2248)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("__SnuPL1_SCANNER_H__" variable (:constant-flag t) nil [1987 2007])
            ("istream" include (:system-flag t) nil [2009 2027])
            ("ostream" include (:system-flag t) nil [2028 2046])
            ("iomanip" include (:system-flag t) nil [2047 2065])
            ("map" include (:system-flag t) nil [2066 2080])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [2082 2102])
            ("EToken" type
               (:members 
                  ( ("tDigit" variable
                       (:constant-flag t
                        :default-value (2313 2314)
                        :type "int")
                        (reparse-symbol enumsubparts) [2306 2314])
                    ("tLetter" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2355 2363])
                    ("tChar" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2406 2412])
                    ("tString" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2465 2473])
                    ("tNumber" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2522 2530])
                    ("tBoolean" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2572 2581])
                    ("tType" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2647 2653])
                    ("tFactOp" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2729 2737])
                    ("tTermOp" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2803 2811])
                    ("tRelOp" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2875 2882])
                    ("tBang" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2968 2974])
                    ("tAssign" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3036 3044])
                    ("tSemicolon" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3104 3115])
                    ("tDot" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3163 3168])
                    ("tLBrak" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3216 3223])
                    ("tRBrak" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3278 3285])
                    ("tColon" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3342 3349])
                    ("tComma" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3397 3404])
                    ("tLParen" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3452 3460])
                    ("tRParen" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3518 3526])
                    ("tModule" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3586 3594])
                    ("tBegin" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3644 3651])
                    ("tEnd" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3701 3706])
                    ("tVarDecl" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3756 3765])
                    ("tWhile" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3812 3819])
                    ("tDo" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3869 3873])
                    ("tIf" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3924 3928])
                    ("tThen" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3978 3984])
                    ("tElse" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4034 4040])
                    ("tReturn" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4091 4099])
                    ("tProcedure" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4150 4161])
                    ("tFunction" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4211 4221])
                    ("tEOF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4272 4277])
                    ("tIOError" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4325 4334])
                    ("tUndefined" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4376 4426]))                  
                :type "enum")
                nil [2290 4427])
            ("CToken" type
               (:members 
                  ( ("CScanner" friend nil (reparse-symbol classsubparts) [4745 4766])
                    ("public" label nil (reparse-symbol classsubparts) [4770 4777])
                    ("CToken" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4856 4865])
                    ("CToken" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("line" variable (:type "int") (reparse-symbol arg-sub-list) [5120 5129])
                            ("charpos" variable (:type "int") (reparse-symbol arg-sub-list) [5130 5142])
                            ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5143 5155])
                            ("value" variable
                               (:constant-flag t
                                :default-value "\"\""
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5156 5177]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5113 5179])
                    ("CToken" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("CToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5266 5286]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5259 5287])
                    ("CToken" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("token" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("CToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5374 5394]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5367 5395])
                    ("Name" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :constant-flag t
                        :arguments 
                          ( ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5564 5576]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5539 5577])
                    ("GetName" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :constant-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [5676 5681]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5655 5688])
                    ("GetType" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [5781 5786]))                          
                        :type ("EToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5766 5810])
                    ("GetValue" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [5907 5912]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5891 5937])
                    ("GetLineNumber" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6124 6129]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [6106 6153])
                    ("GetCharPosition" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6301 6306]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [6281 6330])
                    ("print" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("out" variable
                               (:reference 1
                                :type ("ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6458 6471]))                          
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6442 6478])
                    ("private" label nil (reparse-symbol classsubparts) [6482 6490])
                    ("_type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6495 6508])
                    ("_value" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6547 6561])
                    ("_line" variable (:type "int") (reparse-symbol classsubparts) [6600 6613])
                    ("_char" variable (:type "int") (reparse-symbol classsubparts) [6670 6683])
                    ("escape" function
                       (:prototype-flag t
                        :arguments 
                          ( ("text" variable
                               (:constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6884 6902]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6870 6903]))                  
                :type "class")
                nil [4728 6906])
            ("<<" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("out" variable
                       (:reference 1
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7096 7109])
                    ("t" variable
                       (:reference 1
                        :constant-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7110 7126]))                  
                :type ("ostream" type (:type "class") nil nil))
                nil [7076 7127])
            ("<<" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("out" variable
                       (:reference 1
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7275 7288])
                    ("t" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7289 7305]))                  
                :type ("ostream" type (:type "class") nil nil))
                nil [7255 7306])
            ("CScanner" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [7496 7503])
                    ("CScanner" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("in" variable
                               (:pointer 1
                                :type ("istream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7661 7673]))                          
                        :type ("CScanner" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7652 7674])
                    ("CScanner" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("in" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7782 7792]))                          
                        :type ("CScanner" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7773 7793])
                    ("CScanner" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [7825 7837])
                    ("Get" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7972 7977]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7961 7978])
                    ("Peek" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8112 8117]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [8100 8124])
                    ("Good" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8318 8323]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [8308 8347])
                    ("GetLineNumber" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8481 8486]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [8463 8510])
                    ("GetCharPosition" function
                       (:methodconst-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [8640 8685])
                    ("private" label nil (reparse-symbol classsubparts) [8690 8698])
                    ("InitKeywords" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8773 8778]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8755 8779])
                    ("NextToken" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8835 8840]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8820 8841])
                    ("RecordStreamPosition" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [8920 8948])
                    ("GetRecordedStreamPosition" function
                       (:prototype-flag t
                        :arguments 
                          ( ("lineno" variable
                               (:pointer 1
                                :type "int")
                                (reparse-symbol arg-sub-list) [9137 9149])
                            ("charpos" variable
                               (:pointer 1
                                :type "int")
                                (reparse-symbol arg-sub-list) [9150 9163]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [9106 9164])
                    ("NewToken" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("type" variable (:type ("EToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9337 9349])
                            ("token" variable
                               (:constant-flag t
                                :default-value "\"\""
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9350 9371]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9320 9373])
                    ("Scan" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9549 9554]))                          
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9536 9555])
                    ("GetChar" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9696 9701]))                          
                        :type "char")
                        (reparse-symbol classsubparts) [9683 9702])
                    ("GetChar" function
                       (:prototype-flag t
                        :arguments 
                          ( ("n" variable (:type "int") (reparse-symbol arg-sub-list) [9899 9905]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9884 9906])
                    ("IsWhite" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("c" variable (:type "char") (reparse-symbol arg-sub-list) [10114 10121]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [10101 10128])
                    ("IsLetter" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("c" variable (:type "char") (reparse-symbol arg-sub-list) [10169 10176]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [10155 10183])
                    ("IsDigit" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("c" variable (:type "char") (reparse-symbol arg-sub-list) [10202 10209]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [10189 10216])
                    ("IsPrintable" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("c" variable (:type "char") (reparse-symbol arg-sub-list) [10239 10246]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [10222 10253])
                    ("private" label nil (reparse-symbol classsubparts) [10269 10277])
                    ("keywords" variable
                       (:typemodifiers ("static")
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("EToken" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [10282 10318])
                    ("_in" variable
                       (:pointer 1
                        :type ("istream" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10363 10376])
                    ("_delete_in" variable (:type "bool") (reparse-symbol classsubparts) [10417 10436])
                    ("_good" variable (:type "bool") (reparse-symbol classsubparts) [10495 10509])
                    ("_line" variable (:type "int") (reparse-symbol classsubparts) [10556 10570])
                    ("_char" variable (:type "int") (reparse-symbol classsubparts) [10628 10642])
                    ("_saved_line" variable (:type "int") (reparse-symbol classsubparts) [10709 10729])
                    ("_saved_char" variable (:type "int") (reparse-symbol classsubparts) [10779 10799])
                    ("_token" variable
                       (:pointer 1
                        :type ("CToken" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10858 10873]))                  
                :type "class")
                nil [7477 10924]))          
      :file "scanner.h"
      :pointmax 10958
      :fsize 10957
      :lastmodtime '(23934 62562 906235 800000)
      :unmatched-syntax nil
      :lexical-table 
        '(("__SnuPL1_SCANNER_H__")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("cstdlib" include (:system-flag t) nil [1760 1778])
            ("iostream" include (:system-flag t) nil [1779 1798])
            ("fstream" include (:system-flag t) nil [1799 1817])
            ("scanner.h" include nil nil [1819 1839])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [1840 1860])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [1871 1880])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1881 1894]))                  
                :type "int")
                nil [1862 2348]))          
      :file "test_scanner.cpp"
      :pointmax 2349
      :fsize 2348
      :lastmodtime '(23932 48516 274172 900000)
      :unmatched-syntax nil))
  :file "!home!starvessel!snucomp!1.Scanning!snuplc!src!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
